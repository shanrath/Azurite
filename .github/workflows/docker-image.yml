name: Docker Image CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
#  pull_request:
#    branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  DOCKER_USER: shanraeth
  # github.repository as <account>/<repo>
  IMAGE_NAME: shanraeth/azurite


jobs:
  build:

    runs-on: windows-2019
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

#       # Install the cosign tool except on PR
#       # https://github.com/sigstore/cosign-installer
#       - name: Install cosign
#         if: github.event_name != 'pull_request'
#         uses: sigstore/cosign-installer@1e95c1de343b5b0c23352d6417ee3e48d5bcd422
#         with:
#           cosign-release: 'v1.4.0'

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1 
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: build and push to docker registry https://github.com/shanrath/Azurite/runs/5264729616?check_suite_focus=true
        run: | 
          docker build . --tag ${{ env.IMAGE_NAME }}:latest;
          docker push ${{ env.IMAGE_NAME }} -a;
#echo | set /p="${{ secrets.DOCKER_PAT }}" | docker login -u ${{ env.DOCKER_USER }} --password-stdin ; 

#       - name: Build and push Docker images # linux only, sadly
#         # You may pin to the exact commit or the version.
#         # uses: docker/build-push-action@7f9d37fa544684fb73bfe4835ed7214c255ce02b
#         uses: docker/build-push-action@v1.1.2
#         with:
#           # Push is a shorthand for --output=type=registry
#           push: true # optional, default is false
#           # List of secrets to expose to the build (e.g., key=string, GIT_AUTH_TOKEN=mytoken)
#           tags: ${{ env.IMAGE_NAME }}:latest # optional
#           # Sets the target stage to build
#           #target: # optional

#       # Sign the resulting Docker image digest except on PRs.
#       # This will only write to the public Rekor transparency log when the Docker
#       # repository is public to avoid leaking data.  If you would like to publish
#       # transparency data even for private images, pass --force to cosign below.
#       # https://github.com/sigstore/cosign
#       - name: Sign the published Docker image
#         if: ${{ github.event_name != 'pull_request' }}
#         env:
#           COSIGN_EXPERIMENTAL: "true"
#         # This step uses the identity token to provision an ephemeral certificate
#         # against the sigstore community Fulcio instance.
#         run: cosign sign ${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}
